# -*- coding: utf-8 -*-
"""Copy of simple_linear_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10_TJ5YQD97gUe6Y0RrctJ4VHFOdJsnQS

# Simple Linear Regression

## Importing the libraries

Two libraries: Scikit-learn and Matplotlib will be used
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

"""## Importing the dataset

This dataset provides salaries of employees, along with the years of experience they have in the workforce.
"""

dataset = pd.read_csv('Salary_Data.csv')
X = dataset.iloc[:, :-1].values
Y = dataset.iloc[:, -1].values

"""## Splitting the dataset into the Training set and Test set

The training set is used to train the model, teaching it how to predict salaries based on the years of experience. Then, the model is tested on the test set to ensure its accuracy on data that it has not been trained on. Here, we use 80% of the data set to train the model, and 20% to test it. The data is randomly split into sets.
"""

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size= 0.2, random_state = 0)

"""## Training the model on the Training set of Data

Here, we use the scikit-learn library to import the linear regression class. Then, we use the fit method to train the model on the training set.
"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, Y_train)

"""## Predicting the Test set results

After training the model, we now predict the salaries of employees when given the years of experience.
"""

Y_pred = regressor.predict(X_test)

"""## Visualising the Training set results

Here, the results of the training set are visualised for ease of understanding. To create the visual, we use Matplotlib.
"""

plt.scatter(X_train, Y_train, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Salary vs Experience (Training set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

"""## Visualising the Test set results

Here, the results of the test set are visualised for ease of understanding. To create the visual, we use Matplotlib. As we can see, the trendline goes through most data points, indicating that the model can accurately predict salaries given the years of experience.
"""

plt.scatter(X_test, Y_test, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Salary vs Experience (Test set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()